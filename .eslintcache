[{"/home/sonal/Documents/projects/changing-habits-adminpanel/src/index.js":"1","/home/sonal/Documents/projects/changing-habits-adminpanel/src/store.js":"2","/home/sonal/Documents/projects/changing-habits-adminpanel/src/App.js":"3","/home/sonal/Documents/projects/changing-habits-adminpanel/src/polyfill.js":"4","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/index.js":"5","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/forgetPassword/forgetPassword.js":"6","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/resetPassword/resetPassword.js":"7","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/login/Login.js":"8","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheLayout.js":"9","/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/index.js":"10","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/otpVerify/index.js":"11","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/logo-negative.js":"12","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/logo.js":"13","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/sygnet.js":"14","/home/sonal/Documents/projects/changing-habits-adminpanel/src/api.js":"15","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/index.js":"16","/home/sonal/Documents/projects/changing-habits-adminpanel/src/reusable/validations/loginValidations.js":"17","/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/sidebarReducer.js":"18","/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/authReducer.js":"19","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheSidebar.js":"20","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownNotif.js":"21","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownTasks.js":"22","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdown.js":"23","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownMssg.js":"24","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeader.js":"25","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheFooter.js":"26","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheContent.js":"27","/home/sonal/Documents/projects/changing-habits-adminpanel/src/apiConstants.js":"28","/home/sonal/Documents/projects/changing-habits-adminpanel/src/utils/helper.js":"29","/home/sonal/Documents/projects/changing-habits-adminpanel/src/history.js":"30","/home/sonal/Documents/projects/changing-habits-adminpanel/src/actions/types.js":"31","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/_nav.js":"32","/home/sonal/Documents/projects/changing-habits-adminpanel/src/actions/index.js":"33","/home/sonal/Documents/projects/changing-habits-adminpanel/src/routes.js":"34","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/svgs/defaultUser.js":"35","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/viewStaticContent/faqQ.js":"36","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/Faqs/editFaqs/editFaqs.js":"37","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/staticContent.js":"38","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/viewStaticContent/viewStaticContent.js":"39","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/editStaticContent/editStaticContent.js":"40","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/Faqs/addFqs/addFaqs.js":"41","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/updateEmailOtp.js":"42","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/adminProfile.js":"43","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/User.js":"44","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/changePassword/changePassword.js":"45","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/editUser.js":"46","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/editAdmin.js":"47","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/newUsers.js":"48","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/recipeManagement/recipes.js":"49","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/page404/Page404.js":"50","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/recipeManagement/addRecipe.js":"51","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/theme/colors/Colors.js":"52","/home/sonal/Documents/projects/changing-habits-adminpanel/src/globalComponent/loader.js":"53"},{"size":461,"mtime":1625140099029,"results":"54","hashOfConfig":"55"},{"size":966,"mtime":1625140099029,"results":"56","hashOfConfig":"55"},{"size":1689,"mtime":1625140099021,"results":"57","hashOfConfig":"55"},{"size":1958,"mtime":1625140099029,"results":"58","hashOfConfig":"55"},{"size":4102,"mtime":1625140099025,"results":"59","hashOfConfig":"55"},{"size":4546,"mtime":1625144778529,"results":"60","hashOfConfig":"55"},{"size":9834,"mtime":1625140099033,"results":"61","hashOfConfig":"55"},{"size":7024,"mtime":1625140099033,"results":"62","hashOfConfig":"55"},{"size":432,"mtime":1625140099025,"results":"63","hashOfConfig":"55"},{"size":404,"mtime":1625140099029,"results":"64","hashOfConfig":"55"},{"size":7052,"mtime":1625140099033,"results":"65","hashOfConfig":"55"},{"size":6963,"mtime":1625140099025,"results":"66","hashOfConfig":"55"},{"size":6949,"mtime":1625140099025,"results":"67","hashOfConfig":"55"},{"size":987,"mtime":1625140099025,"results":"68","hashOfConfig":"55"},{"size":15446,"mtime":1625144778529,"results":"69","hashOfConfig":"55"},{"size":617,"mtime":1625140099029,"results":"70","hashOfConfig":"55"},{"size":3673,"mtime":1625140099029,"results":"71","hashOfConfig":"55"},{"size":461,"mtime":1625140099029,"results":"72","hashOfConfig":"55"},{"size":529,"mtime":1625140099029,"results":"73","hashOfConfig":"55"},{"size":1528,"mtime":1625140099025,"results":"74","hashOfConfig":"55"},{"size":2501,"mtime":1625140099025,"results":"75","hashOfConfig":"55"},{"size":2311,"mtime":1625140099025,"results":"76","hashOfConfig":"55"},{"size":2329,"mtime":1625140099025,"results":"77","hashOfConfig":"55"},{"size":4916,"mtime":1625140099025,"results":"78","hashOfConfig":"55"},{"size":1834,"mtime":1625140099025,"results":"79","hashOfConfig":"55"},{"size":231,"mtime":1625140099025,"results":"80","hashOfConfig":"55"},{"size":1374,"mtime":1625140099025,"results":"81","hashOfConfig":"55"},{"size":1335,"mtime":1625140099021,"results":"82","hashOfConfig":"55"},{"size":501,"mtime":1625140099029,"results":"83","hashOfConfig":"55"},{"size":89,"mtime":1625140099029,"results":"84","hashOfConfig":"55"},{"size":115,"mtime":1625140099021,"results":"85","hashOfConfig":"55"},{"size":624,"mtime":1625140099029,"results":"86","hashOfConfig":"55"},{"size":699,"mtime":1625140099021,"results":"87","hashOfConfig":"55"},{"size":3947,"mtime":1625140099029,"results":"88","hashOfConfig":"55"},{"size":745,"mtime":1625140099025,"results":"89","hashOfConfig":"55"},{"size":11504,"mtime":1625140099037,"results":"90","hashOfConfig":"55"},{"size":5146,"mtime":1625140099033,"results":"91","hashOfConfig":"55"},{"size":4724,"mtime":1625140099037,"results":"92","hashOfConfig":"55"},{"size":2897,"mtime":1625140099037,"results":"93","hashOfConfig":"55"},{"size":6634,"mtime":1625140099037,"results":"94","hashOfConfig":"55"},{"size":4515,"mtime":1625140099033,"results":"95","hashOfConfig":"55"},{"size":7002,"mtime":1625140099029,"results":"96","hashOfConfig":"55"},{"size":4600,"mtime":1625140099029,"results":"97","hashOfConfig":"55"},{"size":5369,"mtime":1625140099037,"results":"98","hashOfConfig":"55"},{"size":10222,"mtime":1625140099033,"results":"99","hashOfConfig":"55"},{"size":17049,"mtime":1625140099037,"results":"100","hashOfConfig":"55"},{"size":12695,"mtime":1625140099029,"results":"101","hashOfConfig":"55"},{"size":12243,"mtime":1625144778529,"results":"102","hashOfConfig":"55"},{"size":12366,"mtime":1625145304974,"results":"103","hashOfConfig":"55"},{"size":899,"mtime":1625140099033,"results":"104","hashOfConfig":"55"},{"size":16832,"mtime":1625140099033,"results":"105","hashOfConfig":"55"},{"size":3718,"mtime":1625140099037,"results":"106","hashOfConfig":"55"},{"size":539,"mtime":1625140099029,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1v84vs3",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},"/home/sonal/Documents/projects/changing-habits-adminpanel/src/index.js",[],["229","230"],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/store.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/App.js",["231"],"import React, { Component } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./scss/style.scss\";\r\nimport history from \"../src/history\";\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\nconst TheLayout = React.lazy(() => import(\"./containers/TheLayout\"));\r\n\r\nconst Login = React.lazy(() => import(\"./views/pages/login/Login\"));\r\nconst Resetpassword = React.lazy(() =>\r\n  import(\"./views/pages/resetPassword/resetPassword\")\r\n);\r\nconst Forgetpassword = React.lazy(() =>\r\n  import(\"./views/pages/forgetPassword/forgetPassword\")\r\n);\r\nconst OtpVerify = React.lazy(() => import(\"./views/pages/otpVerify\"));\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <React.Suspense fallback={loading}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/login\"\r\n              name=\"Login Page\"\r\n              render={(props) => <Login {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/resetpassword\"\r\n              name=\"Reset Pass\"\r\n              render={(props) => <Resetpassword {...props} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/forgetpassword\"\r\n              name=\"Forget Pass\"\r\n              render={(props) => <Forgetpassword {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              name=\"Home\"\r\n              render={(props) => <TheLayout {...props} />}\r\n            />\r\n          </Switch>\r\n        </React.Suspense>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/polyfill.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/index.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/forgetPassword/forgetPassword.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/resetPassword/resetPassword.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/login/Login.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheLayout.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/index.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/otpVerify/index.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/logo-negative.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/logo.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/icons/sygnet.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/api.js",["232","233"],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/index.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/reusable/validations/loginValidations.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/sidebarReducer.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/reducers/authReducer.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheSidebar.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownNotif.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownTasks.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdown.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeaderDropdownMssg.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheHeader.js",["234","235"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CHeader, CToggler, CHeaderBrand, CHeaderNav } from \"@coreui/react\";\r\n\r\nimport biglogo from \"../assets/icons/dish.jpeg\";\r\nimport { setSideBar } from \"../actions/index\";\r\nimport { TheHeaderDropdown } from \"./index\";\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const sidebarShow = useSelector((state) => state.sidebar.sidebarShow);\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, \"responsive\"].includes(sidebarShow)\r\n      ? false\r\n      : \"responsive\";\r\n    dispatch(setSideBar(val));\r\n  };\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, \"responsive\"].includes(sidebarShow)\r\n      ? true\r\n      : \"responsive\";\r\n    dispatch(setSideBar(val));\r\n  };\r\n\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        {/* <CHeaderNavItem className=\"px-3\" >\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">val\r\n          <CHeaderNavLink>Settings</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n        {/* <TheHeaderDropdownNotif /> */}\r\n        {/* <TheHeaderDropdownTasks />\r\n        <TheHeaderDropdownMssg /> */}\r\n        <TheHeaderDropdown />\r\n      </CHeaderNav>\r\n    </CHeader>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheFooter.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/TheContent.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/apiConstants.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/utils/helper.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/history.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/actions/types.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/containers/_nav.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/actions/index.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/routes.js",["236"],"import React from \"react\";\r\nimport AddRecipe from \"./views/recipeManagement/addRecipe\";\r\n\r\nconst UpdateEmail = React.lazy(() =>\r\n  import(\"./views/adminProfile/updateEmailOtp\")\r\n);\r\nconst Colors = React.lazy(() => import(\"./views/theme/colors/Colors\"));\r\nconst NewUsers = React.lazy(() => import(\"./views/users/newUsers\"));\r\nconst Page404 = React.lazy(() => import(\"./views/pages/page404/Page404\"));\r\n\r\nconst RecipeManagement = React.lazy(() =>\r\n  import(\"./views/recipeManagement/recipes\")\r\n);\r\nconst RecipeAdd = React.lazy(() =>\r\n  import(\"./views/recipeManagement/addRecipe\")\r\n);\r\nconst User = React.lazy(() => import(\"./views/users/User\"));\r\nconst EditUser = React.lazy(() => import(\"./views/users/editUser\"));\r\nconst ChangePassword = React.lazy(() =>\r\n  import(\"./views/changePassword/changePassword\")\r\n);\r\nconst AdminProfile = React.lazy(() =>\r\n  import(\"./views/adminProfile/adminProfile\")\r\n);\r\n\r\nconst EditAdmin = React.lazy(() => import(\"./views/adminProfile/editAdmin\"));\r\n\r\nconst StaticContent = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/staticContent\")\r\n);\r\nconst ViewStaticContent = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/viewStaticContent/viewStaticContent\")\r\n);\r\nconst EditStaticContent = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/editStaticContent/editStaticContent\")\r\n);\r\nconst AddFaqs = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/Faqs/addFqs/addFaqs\")\r\n);\r\nconst FAQS = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/viewStaticContent/faqQ\")\r\n);\r\nconst EditFqs = React.lazy(() =>\r\n  import(\"./views/staticContentManagement/Faqs/editFaqs/editFaqs\")\r\n);\r\n\r\nconst routes = [\r\n  { path: \"/\", exact: true, name: \"Users\", component: User },\r\n  { path: \"/theme\", name: \"Theme\", component: Colors, exact: true },\r\n  { path: \"/theme/colors\", name: \"Colors\", component: Colors },\r\n  {\r\n    path: \"/recipeManagement\",\r\n    exact: true,\r\n    name: \"RecipeManagement\",\r\n    component: RecipeManagement,\r\n  },\r\n  {\r\n    path: \"/addrecipe\",\r\n    exact: true,\r\n    name: \"Add Recipe\",\r\n    component: RecipeAdd,\r\n  },\r\n  {\r\n    path: \"/addrecipe/:id\",\r\n    exact: true,\r\n    name: \"Add User\",\r\n    component: RecipeAdd,\r\n  },\r\n  { path: \"/users\", exact: true, name: \"Users\", component: NewUsers },\r\n  {\r\n    path: \"/categorytypemanagement\",\r\n    exact: true,\r\n    name: \"Category\",\r\n    component: \"\",\r\n  },\r\n\r\n  { path: \"/user/:id\", exact: true, name: \"User Details\", component: User },\r\n  {\r\n    path: \"/editUser/:id\",\r\n    exact: true,\r\n    name: \"Edit User\",\r\n    component: EditUser,\r\n  },\r\n  {\r\n    path: \"/addUser\",\r\n    exact: true,\r\n    name: \"Edit User\",\r\n    component: EditUser,\r\n  },\r\n  {\r\n    path: \"/changePassword\",\r\n    exact: true,\r\n    name: \"Change Password\",\r\n    component: ChangePassword,\r\n  },\r\n  { path: \"/profile\", exact: true, name: \"Profile\", component: AdminProfile },\r\n\r\n  { path: \"/editAdmin\", exact: true, name: \"Edit Admin\", component: EditAdmin },\r\n  {\r\n    path: \"/updateEmail\",\r\n    exact: true,\r\n    name: \"Edit Admin\",\r\n    component: UpdateEmail,\r\n  },\r\n  {\r\n    path: \"/static\",\r\n    exact: true,\r\n    name: \"StaticContent\",\r\n    component: StaticContent,\r\n  },\r\n  {\r\n    path: `/viewStaticContent/:id`,\r\n    exact: true,\r\n    name: \"View Content\",\r\n    component: ViewStaticContent,\r\n  },\r\n  {\r\n    path: [\r\n      `/viewStaticContent/:id/faqs`,\r\n      `/viewStaticContent/:id/faqs/:topicid`,\r\n    ],\r\n    exact: true,\r\n    name: \"FAQS\",\r\n    component: FAQS,\r\n  },\r\n  {\r\n    path: `/editStaticContent/:id`,\r\n    exact: true,\r\n    name: \"Edit Content\",\r\n    component: EditStaticContent,\r\n  },\r\n  {\r\n    path: `/viewStaticContent/:id/addFaqs`,\r\n    exact: true,\r\n    name: \"Add Faqs\",\r\n    component: AddFaqs,\r\n  },\r\n  {\r\n    path: `/viewStaticContent/:id/faqs/:questionId/editFaqs/`,\r\n    exact: true,\r\n    name: \"Edit Faqs\",\r\n    component: EditFqs,\r\n  },\r\n\r\n  { component: Page404 },\r\n];\r\n\r\nexport default routes;\r\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/assets/svgs/defaultUser.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/viewStaticContent/faqQ.js",["237","238","239","240","241","242","243","244"],"import React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"react-collapse\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport { DeleteFaq, getFaqs, ToggleFaqStatus } from \"../../../api\";\nimport { useHistory, useParams } from \"react-router\";\nimport { freeSet, cibWindows } from \"@coreui/icons\";\nimport _ from \"lodash\";\nimport {\n  CPagination,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalBody,\n  CModalTitle,\n  CSwitch,\n  CTooltip,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst FAQS = () => {\n  const history = useHistory();\n\n  // const { id } = useParams();\n  const path = useParams();\n  const id = path.id;\n  const topicid = path.topicid;\n\n  const [statusOpened, setStatusOpened] = useState({});\n  const [qus, setQus] = useState([]);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const [questionId, setQuestionId] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [enableModal, setEnableModal] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n\n  const [show, setShow] = useState(null);\n  const [error, setError] = useState(null);\n  const [pageSize, setPageSize] = useState(10);\n  const [active, setActive] = useState(null);\n  const [activePage, setCurrentPage] = useState(1);\n  const [totalItems, setTotalItems] = useState(null);\n  const [startId, setStartId] = useState(0);\n  let endId = qus && (startId < 0 ? 0 : startId + qus.length);\n\n  const handleCollapse = (e, id) => {\n    // let updatedStatus = { ...statusOpened };\n    let updatedStatus = { statusOpened };\n    updatedStatus[id] = !updatedStatus[id];\n    setStatusOpened(updatedStatus);\n  };\n\n  const toggleEnable = (id, status) => {\n    setUserId(id);\n    setActive(status);\n    setEnableModal(!enableModal);\n  };\n\n  const handleEnable = async () => {\n    try {\n      setEnableModal(!enableModal);\n      await ToggleFaqStatus(userId);\n      setRefresh(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    handleQuestions();\n    debugger;\n  }, [refresh, activePage]);\n\n  const handleQuestions = async () => {\n    const data = await getFaqs(activePage ? activePage : 1);\n    if (data.status == 200) {\n      setError(null);\n      let rows = data.faqsData.rows;\n      let status = {};\n      rows.forEach(({ id }) => (status[id] = false));\n      setStatusOpened(status);\n      setQus(data.faqsData.rows);\n      setTotalItems(data.faqsData.count);\n      let newStartId = pageSize * (activePage - 1);\n      setStartId(newStartId);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      setDeleteModal(!deleteModal);\n      const deleteResult = await DeleteFaq(questionId);\n      if (deleteResult.status == 200) {\n        window.location.reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <>\n      <CModal\n        show={deleteModal}\n        centered={true}\n        backdrop={true}\n        color=\"warning\"\n        onClose={setDeleteModal}\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>Delete FAQ?</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          Are you sure you want to Delete this FAQ question?\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"success\" onClick={handleDelete}>\n            Yes\n          </CButton>\n          <CButton color=\"secondary\" onClick={() => setDeleteModal(false)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <CModal\n        show={enableModal}\n        centered={true}\n        color=\"warning\"\n        onClose={setEnableModal}\n        backdrop={true}\n        style={{ fontFamily: \"Poppins\" }}\n      >\n        <CModalHeader style={{ height: \"3rem\" }}>\n          <CModalTitle>{active ? \"Disable Faq?\" : \"Enable Faq?\"}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {active\n            ? \"Are you sure you want to disable this Faq?\"\n            : \"Are you sure you want to enable this Faq?\"}\n        </CModalBody>\n        <CModalFooter style={{ height: \"4rem\" }}>\n          <CButton color=\"success\" onClick={handleEnable}>\n            Yes\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => setEnableModal(false)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <div\n        className=\"main-content pb-16 md:pb-5 flex-1 pt-20 px-2\"\n        style={{ height: \"100vh\" }}\n      >\n        <div id=\"recipients\" className=\"p-4 md:p-8 mt-6 lg:mt-0 rounded  \">\n          <h1 className=\"text-3xl\">FAQs</h1>\n          <br />\n          <div style={{ marginLeft: \"76%\", marginTop: \"-88px\" }}>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.goBack()}\n              className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Back\n            </CButton>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.push(`/viewStaticContent/${id}/addFaqs`)}\n              className=\"shadow bg-blue-500 ml-3 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Add New\n            </CButton>\n          </div>\n        </div>\n        <div className=\"flex \">\n          {qus && (\n            <div\n              style={{\n                marginLeft: \"90px\",\n                backgroundColor: \"white\",\n                padding: \"20px\",\n                height: \"fit-content\",\n                marginTop: \"50px\",\n                border: error != null ? \"1px solid white\" : \"1px solid black\",\n              }}\n            >\n              <div\n                id=\"doc\"\n                style={{\n                  height: \"fit-content\",\n                }}\n              >\n                {error ? (\n                  <p\n                    style={{\n                      color: \"red\",\n                      fontSize: \"20px\",\n                      textAlign: \"center\",\n                      width: \"100%\",\n                      marginTop: \"12px\",\n                    }}\n                  >\n                    {error}\n                  </p>\n                ) : (\n                  qus.map((ques) => {\n                    return (\n                      <>\n                        <div\n                          style={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                          }}\n                          onClick={(e) => handleCollapse(e, ques.id)}\n                        >\n                          <label\n                            htmlFor={\"acc\" + ques.id}\n                            style={{ fontSize: \"20px\", wordBreak: \"break-all\" }}\n                            className=\"font-semibold\"\n                          >\n                            {ques.question}\n                            {!statusOpened[ques.id] ? (\n                              <ArrowDropDownIcon style={{ float: \"right\" }} />\n                            ) : (\n                              <ArrowDropUpIcon style={{ float: \"right\" }} />\n                            )}\n                          </label>\n                          <Collapse\n                            isOpened={statusOpened[ques.id]}\n                            id={\"acc\" + ques.id}\n                          >\n                            <div\n                              style={{\n                                backgroundColor: \"lightgrey\",\n                                padding: \"10px\",\n                                marginTop: \"3px\",\n                              }}\n                            >\n                              <p style={{ fontSize: \"17px\" }}>{ques.answer}</p>\n                              <div style={{ textAlign: \"right\" }}>\n                                <CTooltip\n                                  content={\"edit Faq\"}\n                                  placement={\"top-start\"}\n                                >\n                                  <CIcon\n                                    onClick={() =>\n                                      history.push(\n                                        `/viewStaticContent/${id}/faqs/${ques.id}/editFaqs`\n                                      )\n                                    }\n                                    style={{\n                                      color: \"red\",\n                                      cursor: \"pointer\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    size=\"lg\"\n                                    content={freeSet.cilPencil}\n                                  />\n                                </CTooltip>\n\n                                <CTooltip\n                                  content={`Delete ${ques.id} Faq\n                          `}\n                                  placement={\"top-start\"}\n                                  interactive={true}\n                                  trigger=\"mouseenter\"\n                                >\n                                  <CIcon\n                                    onClick={() => {\n                                      setShow(\"question\");\n                                      setDeleteModal(true);\n                                      setQuestionId(ques.id);\n                                    }}\n                                    size=\"lg\"\n                                    style={{\n                                      color: \"red\",\n                                      cursor: \"pointer\",\n                                      outline: \"none\",\n                                      boxShadow: \"none\",\n                                      marginBottom: \"10px\",\n                                    }}\n                                    content={freeSet.cilTrash}\n                                  />\n                                </CTooltip>\n                                <CSwitch\n                                  onChange={() =>\n                                    toggleEnable(ques.id, ques.status)\n                                  }\n                                  size=\"sm\"\n                                  variant={\"3d\"}\n                                  color={\"success\"}\n                                  checked={ques.status}\n                                />\n                              </div>\n                            </div>\n                          </Collapse>\n                        </div>\n                      </>\n                    );\n                  })\n                )}\n                <br />\n                (showing {startId < 0 ? 0 : startId + 1} - {endId} of{\" \"}\n                {totalItems})\n                <div style={{ textAlign: \"right\" }}>\n                  <CPagination\n                    activePage={activePage}\n                    pages={Math.ceil(totalItems / 10)}\n                    onActivePageChange={handlePageChange}\n                    doubleArrows={true}\n                    align=\"start\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FAQS;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/Faqs/editFaqs/editFaqs.js",["245","246","247","248","249"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { getFaqById, editFaqs } from \"../../../../api\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"../../../../globalComponent/loader\";\nimport { CButton } from \"@coreui/react\";\n\nconst EditFqs = () => {\n  const history = useHistory();\n  const path = useParams();\n  const id = path.questionId;\n\n  const [faqs, setFaqs] = useState({});\n  const [error, setError] = useState(null);\n  const [successMsg, setSuccessMsg] = useState(null);\n\n  useEffect(() => {\n    faqById();\n  }, []);\n\n  const faqById = () => {\n    const res = getFaqById(id)\n      .then((res) => {\n        setFaqs(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleValidation = () => {\n    let error = false;\n    if (faqs.question === \"\") {\n      setError(\"Please fill the question \");\n      error = true;\n    } else if (faqs.answer === \"\") {\n      setError(\"Please fill the answer \");\n      error = true;\n    }\n    return error;\n  };\n\n  const handleSubmit = () => {\n    if (!handleValidation()) {\n      const bodyData = new FormData();\n\n      bodyData.append(\"question\", faqs.question);\n      bodyData.append(\"answer\", faqs.answer);\n\n      const res = editFaqs(faqs.id, bodyData)\n        .then((res) => {\n          if (res.status == 200) {\n            setError(null);\n            setSuccessMsg(\"FAQ updated successfully\");\n            setTimeout(() => {\n              history.push(`/viewStaticContent/${id}/faqs`);\n            }, 1000);\n          }\n        })\n        .catch((error) => {\n          setError(error);\n        });\n    }\n  };\n  return (\n    <>\n      <div className=\"main-content pb-16 md:pb-5 flex-1 pt-20 px-2\">\n        <div\n          id=\"recipients\"\n          className=\"p-4 md:p-8 mt-6 lg:mt-0 rounded shadow bg-white\"\n        >\n          <h1 className=\"text-2xl\">Edit FAQ</h1>\n          <br />\n          <div style={{ marginLeft: \"80%\", marginTop: \"-70px\" }}>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.goBack()}\n              className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Back\n            </CButton>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={handleSubmit}\n              className=\"shadow bg-blue-500 ml-3 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Save\n            </CButton>\n          </div>\n          <br />\n          {error && (\n            <p\n              style={{\n                color: \"red\",\n                fontSize: \"20px\",\n                textAlign: \"center\",\n                width: \"100%\",\n                marginTop: \"12px\",\n              }}\n            >\n              {error}\n            </p>\n          )}\n          {successMsg && (\n            <div\n              style={{\n                backgroundColor: \"#9ACD32\",\n                padding: \"10px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                marginTop: \"24px\",\n                width: \"fit-content\",\n              }}\n            >\n              {successMsg}\n            </div>\n          )}\n\n          {!faqs ? (\n            <Loader />\n          ) : (\n            <div\n              style={{\n                marginTop: \"20px\",\n                backgroundColor: \"lightgrey\",\n                padding: \"20px\",\n                height: \"400px\",\n              }}\n            >\n              <div className=\"flex mt-10 \">\n                <h1 className=\"text-xl ml-50 \">Question</h1>\n                <input\n                  style={{\n                    width: \"70%\",\n                    marginLeft: \"140px\",\n                    height: \"40px\",\n                    padding: \"10px\",\n                  }}\n                  placeholder=\"Enter the question \"\n                  value={faqs.question}\n                  onChange={(e) => {\n                    let updatedData = { ...faqs };\n                    updatedData[\"question\"] = e.target.value;\n                    setFaqs(updatedData);\n                  }}\n                />\n              </div>\n\n              <div className=\"flex mt-10 \">\n                <h1 className=\"text-xl ml-50 \">Answer</h1>\n                <textarea\n                  placeholder=\"Enter the answer \"\n                  style={{\n                    width: \"70%\",\n                    height: \"100px\",\n                    marginLeft: \"140px\",\n                    padding: \"10px\",\n                  }}\n                  id=\"ans\"\n                  value={faqs.answer}\n                  onChange={(e) => {\n                    let updatedData = { ...faqs };\n                    updatedData[\"answer\"] = e.target.value;\n                    setFaqs(updatedData);\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditFqs;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/staticContent.js",["250","251"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CTooltip,\n} from \"@coreui/react\";\nimport { freeSet } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport { getStaticContents } from \"../../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nconst fields = [\n  { key: \"id\", label: \"S.No\", _style: { fontFamily: \"Poppins\" } },\n  {\n    key: \"title\",\n    label: \"Page Name \",\n    _style: { fontFamily: \"Poppins\" },\n  },\n  {\n    key: \"updatedAt\",\n    label: \"Last Updated\",\n    _style: { fontFamily: \"Poppins\" },\n  },\n  {\n    key: \"show_details\",\n    label: \"Action\",\n    _style: { minWidth: \"7rem\" },\n    sorter: false,\n    filter: false,\n  },\n];\nconst StaticContentList = () => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getStaticContents();\n        setLoading(false);\n        data.staticContentList.map((item) => {\n          item._classes = \"catTableItem\";\n\n          if (item.updatedAt) {\n            item.updatedAt = item.updatedAt.slice(0, 10);\n          }\n          return item;\n        });\n        setData(data.staticContentList);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <CRow>\n      <CCol xxl={12}>\n        <CCard>\n          <CCardHeader style={{ fontFamily: \"Lato\" }}>\n            <h2>\n              <strong>Content Management</strong>\n            </h2>\n          </CCardHeader>\n          <CCardBody>\n            <CDataTable\n              items={data}\n              fields={fields}\n              hover\n              border\n              addTableClasses=\"table-class\"\n              striped\n              loading={loading}\n              noItemsViewSlot={\n                !loading ? \"\" : <div style={{ height: \"14rem\" }}></div>\n              }\n              clickableRows\n              scopedSlots={{\n                show_details: (item) => {\n                  return (\n                    <td>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-around\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        {item.id != 5 ? (\n                          <CTooltip\n                            content={\"edit User\"}\n                            placement={\"top-start\"}\n                          >\n                            <CIcon\n                              onClick={() =>\n                                history.push({\n                                  pathname: `/editStaticContent/${item.id}`,\n                                  state: { item },\n                                })\n                              }\n                              style={{ color: \"red\", cursor: \"pointer\" }}\n                              size=\"lg\"\n                              content={freeSet.cilPencil}\n                            />\n                          </CTooltip>\n                        ) : (\n                          \"\"\n                        )}\n                        <CTooltip\n                          content={`View Content`}\n                          placement={\"top-start\"}\n                        >\n                          <FontAwesomeIcon\n                            color=\"green\"\n                            size=\"lg\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() =>\n                              item.id == 5\n                                ? history.push({\n                                    pathname: `/viewStaticContent/${item.id}/faqs`,\n                                    state: { item },\n                                  })\n                                : history.push({\n                                    pathname: `/viewStaticContent/${item.id}`,\n                                    state: { item },\n                                  })\n                            }\n                            icon={faEye}\n                          />\n                        </CTooltip>\n                      </div>\n                    </td>\n                  );\n                },\n              }}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default StaticContentList;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/viewStaticContent/viewStaticContent.js",["252","253"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { getStaticContentDetails, getFileContent } from \"../../../api\";\nimport { CButton } from \"@coreui/react\";\nconst ViewStaticContent = () => {\n  const history = useHistory();\n  const params = useParams();\n\n  const [staticContentDetails, setStaticContentDetails] = useState([]);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const data = getStaticContentDetails(Number(params.id)).then((data) => {\n          setStaticContentDetails(data.staticContentDetails);\n          const Details = getFileContent(\n            data.staticContentDetails.page_url\n          ).then((Details) => {\n            document.getElementById(\"doc\").innerHTML = Details;\n            console.log(Details);\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getDetails();\n  }, [params.id]);\n\n  return (\n    <>\n      <div className=\"main-content pb-16 md:pb-5 flex-1 pt-20 px-2\">\n        {staticContentDetails && (\n          <div\n            id=\"recipients\"\n            className=\"p-4 md:p-8 mt-6 lg:mt-0 rounded shadow bg-white\"\n          >\n            <br />\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.goBack()}\n              className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Back\n            </CButton>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.push(`/editStaticContent/${params.id}`)}\n              className=\"shadow bg-blue-500 ml-3 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Edit\n            </CButton>\n\n            <div\n              style={{\n                marginTop: \"20px\",\n                backgroundColor: \"lightgrey\",\n                padding: \"20px\",\n                width: \"100%\",\n              }}\n            >\n              <div className=\"flex \">\n                <h1 className=\"text-xl\">{staticContentDetails.title}</h1>\n              </div>\n\n              <div className=\"flex mt-10 \">\n                <div className=\"flex flex-col ml-40\">\n                  <br />\n                  <div\n                    id=\"doc\"\n                    style={{\n                      maxHeight: \"230px\",\n                      height: \"300px\",\n                      overflow: \"auto\",\n                      border: \"1px solid black\",\n                      padding: \"10px\",\n                    }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ViewStaticContent;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/editStaticContent/editStaticContent.js",["254","255","256","257","258","259","260"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport {\n  getStaticContentDetails,\n  updateStaticContent,\n  uploadImage,\n  getFileContent,\n} from \"../../../api\";\nimport Loader from \"../../../globalComponent/loader\";\nimport { CButton } from \"@coreui/react\";\n\nconst EditStaticContent = () => {\n  const history = useHistory();\n  const params = useParams();\n  const [staticContentDetails, setStaticContentDetails] = useState(null);\n\n  const [error, setError] = useState(null);\n  const [successMsg, setSuccessMsg] = useState(null);\n\n  const [image_url, setImage_url] = useState(null);\n  const [filename, setFilename] = useState(null);\n\n  useEffect(() => {\n    const getContent = async () => {\n      try {\n        const data = getStaticContentDetails(Number(params.id)).then((data) => {\n          const Details = getFileContent(\n            data.staticContentDetails.page_url\n          ).then((Details) => {\n            document.getElementById(\"doc\").innerHTML = Details;\n            console.log(Details);\n          });\n\n          setStaticContentDetails(data.staticContentDetails);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getContent();\n  }, []);\n\n  const handleUploadFile = async (e) => {\n    setFilename(e.target.files[0].name);\n\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", e.target.files[0], e.target.files[0].name);\n    bodyFormData.append(\"folderName\", \"other\");\n    try {\n      const res = await uploadImage(bodyFormData);\n      if (res.status == 200) {\n        setError(null);\n        updateContent(res.data.image_url);\n        setImage_url(res.data.image_url);\n      }\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const updateContent = (url) => {\n    try {\n      const Details = getFileContent(url).then((Details) => {\n        document.getElementById(\"doc\").innerHTML = Details;\n        console.log(Details);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmitUpdatedFile = async () => {\n    var data = new FormData();\n\n    data.append(\"content_id\", params.id);\n    data.append(\"page_url\", image_url);\n    try {\n      const res = await updateStaticContent(data);\n      if (res.status == 200) {\n        setSuccessMsg(\"Content updated successfully\");\n        setTimeout(() => {\n          history.push(\"/static\");\n        }, 1000);\n      }\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"main-content pb-16 md:pb-5 flex-1 pt-20 px-2\">\n        {!staticContentDetails ? (\n          <Loader />\n        ) : (\n          <div\n            id=\"recipients\"\n            className=\"p-4 md:p-8 mt-6 lg:mt-0 rounded shadow bg-white\"\n          >\n            <br />\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.goBack()}\n              className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Back\n            </CButton>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={handleSubmitUpdatedFile}\n              className=\"shadow bg-blue-500 ml-3 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Save\n            </CButton>\n            <br />\n            {error && (\n              <p\n                style={{\n                  color: \"red\",\n                  fontSize: \"20px\",\n                  textAlign: \"center\",\n                  width: \"100%\",\n                  marginTop: \"12px\",\n                }}\n              >\n                {error}\n              </p>\n            )}\n            {successMsg && (\n              <div\n                style={{\n                  backgroundColor: \"#9ACD32\",\n                  padding: \"10px\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"24px\",\n                  width: \"fit-content\",\n                }}\n              >\n                {successMsg}\n              </div>\n            )}\n            <div\n              style={{\n                marginTop: \"20px\",\n                backgroundColor: \"lightgrey\",\n                padding: \"20px\",\n                height: \"610px\",\n              }}\n            >\n              <div className=\"flex \">\n                <h1 className=\"text-xl\">{staticContentDetails.title}</h1>\n              </div>\n              <div className=\"flex mt-10 \">\n                <div className=\"flex flex-col ml-40\">\n                  <div\n                    id=\"doc\"\n                    style={{\n                      marginLeft: \"70px\",\n                      fontSize: \"15px\",\n                      marginLeft: \"10px\",\n                      maxHeight: \"200px\",\n                      height: \"300px\",\n                      overflow: \"auto\",\n                      padding: \"10px\",\n                      border: \"1px solid black\",\n                    }}\n                  ></div>\n                  <div style={{ display: \"flex\" }}>\n                    <label for=\"upload\" className=\"w-24 block \">\n                      <div className=\"w-full px-2 py-1 ml-5 my-2 flex justify-around items-center bg-gray-400 rounded-lg text-white\">\n                        Upload File\n                        <input\n                          type=\"file\"\n                          onChange={handleUploadFile}\n                          id=\"upload\"\n                          style={{ display: \"none\", padding: \"10px\" }}\n                          accept=\".html\"\n                        />\n                      </div>\n                    </label>\n                    <span\n                      style={{\n                        color: \"red\",\n                        paddingTop: \"13px\",\n                        paddingLeft: \"10px\",\n                      }}\n                    >\n                      Upload file of type html\n                    </span>\n                    {filename && (\n                      <p\n                        style={{\n                          marginTop: \"12px\",\n                          fontSize: \"15px\",\n                          marginLeft: \"10px\",\n                        }}\n                      >\n                        {filename}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default EditStaticContent;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/staticContentManagement/Faqs/addFqs/addFaqs.js",["261","262","263"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { CButton } from \"@coreui/react\";\nimport { addFaq } from \"../../../../api\";\nimport { useSelector } from \"react-redux\";\n\nconst AddFaqs = () => {\n  const token = useSelector((state) => state.auth.isSignedIn);\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({\n    answer: \"\",\n    question: \"\",\n  });\n\n  const [error, setError] = useState(null);\n  const [successMsg, setSuccessMsg] = useState(null);\n\n  const handleValidation = () => {\n    let error = false;\n    if (data.question === \"\") {\n      setError(\"Please fill the question \");\n      error = true;\n    } else if (data.answer === \"\") {\n      setError(\"Please fill the answer \");\n      error = true;\n    }\n    return error;\n  };\n\n  const handleSubmit = async () => {\n    if (!handleValidation()) {\n      const res = await addFaq(data)\n        .then((res) => {\n          setSuccessMsg(\"FAQs added successfully\");\n          setTimeout(() => {\n            history.push(`/viewStaticContent/${id}/faqs`);\n          }, 1000);\n\n          setError(null);\n        })\n        .catch((error) => {\n          setError(error);\n        });\n    }\n  };\n  return (\n    <>\n      <div className=\"main-content pb-16 md:pb-5 flex-1 pt-20 px-2\">\n        <div\n          id=\"recipients\"\n          className=\"p-4 md:p-8 mt-6 lg:mt-0 rounded shadow bg-white\"\n        >\n          <h1 className=\"text-2xl\">Add FAQ</h1>\n          <br />\n          <div style={{ marginLeft: \"80%\", marginTop: \"-78px\" }}>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={() => history.goBack()}\n              className=\"shadow bg-blue-500 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Back\n            </CButton>\n            <CButton\n              style={{ height: \"3rem\" }}\n              onClick={handleSubmit}\n              className=\"shadow bg-blue-500 ml-3 hover:bg-blue-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\"\n              color=\"primary\"\n            >\n              Save\n            </CButton>\n          </div>\n\n          <br />\n          {error && (\n            <p\n              style={{\n                color: \"red\",\n                fontSize: \"20px\",\n                textAlign: \"center\",\n                width: \"100%\",\n                marginTop: \"12px\",\n              }}\n            >\n              {error}\n            </p>\n          )}\n          {successMsg && (\n            <div\n              style={{\n                backgroundColor: \"#9ACD32\",\n                padding: \"10px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                marginTop: \"24px\",\n                width: \"fit-content\",\n              }}\n            >\n              {successMsg}\n            </div>\n          )}\n          <div\n            style={{\n              marginTop: \"20px\",\n              backgroundColor: \"lightgrey\",\n              padding: \"20px\",\n              // width: '990px',\n              height: \"400px\",\n            }}\n          >\n            <div className=\"flex mt-10 \">\n              <h1 className=\"text-xl ml-50 \">Question</h1>\n              <input\n                style={{\n                  width: \"70%\",\n                  marginLeft: \"110px\",\n                  height: \"40px\",\n                  padding: \"10px\",\n                }}\n                placeholder=\"Enter the question\"\n                onChange={(e) => {\n                  let updatedData = { ...data };\n                  updatedData[\"question\"] = e.target.value;\n                  setData(updatedData);\n                }}\n              />\n            </div>\n\n            <div className=\"flex mt-10 \">\n              <h1 className=\"text-xl ml-50 \">Answer</h1>\n              <textarea\n                placeholder=\"Enter the answer\"\n                style={{\n                  width: \"70%\",\n                  height: \"100px\",\n                  marginLeft: \"110px\",\n                  padding: \"10px\",\n                }}\n                id=\"ans\"\n                onChange={(e) => {\n                  let updatedData = { ...data };\n                  updatedData[\"answer\"] = e.target.value;\n                  setData(updatedData);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddFaqs;\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/updateEmailOtp.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/adminProfile.js",["264"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CImg,\r\n  CCardHeader,\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n} from \"@coreui/react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GetUserProfile } from \"../../api\";\r\nimport DefaultUser from \"../../assets/svgs/defaultUser\";\r\n\r\nexport default function AdminProfile() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const res = await GetUserProfile();\r\n        setUserData(res);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return userData ? (\r\n    <CRow alignHorizontal=\"center\" alignVertical=\"center\">\r\n      <CCol xl>\r\n        <CModal\r\n          show={location.state ? true : false}\r\n          size={location.state && location.state.type === \"edit\" ? \"sm\" : \"\"}\r\n          backdrop={false}\r\n          color=\"warning\"\r\n        >\r\n          <CModalHeader closeButton>\r\n            {/* <CModalTitle>Block User Account?</CModalTitle> */}\r\n            {location.state && location.state.data ? location.state.data : \"\"}\r\n          </CModalHeader>\r\n        </CModal>\r\n        <CCard>\r\n          <CCardHeader\r\n            style={{\r\n              fontFamily: \"Lato\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h2>\r\n              <strong>Admin Profile</strong>\r\n            </h2>\r\n            <CButton\r\n              style={{ width: \"8rem\" }}\r\n              color=\"success\"\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: \"./editAdmin\",\r\n                  state: { data: userData },\r\n                })\r\n              }\r\n            >\r\n              <strong>Edit Profile</strong>\r\n            </CButton>\r\n          </CCardHeader>\r\n          <CCardBody\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {userData.profile_picture_url ? (\r\n              <CImg\r\n                src={userData.profile_picture_url}\r\n                className=\"c-avatar-img\"\r\n                alt=\"\"\r\n                style={{ marginBottom: \"2rem\", width: \"6rem\", height: \"6rem\" }}\r\n              />\r\n            ) : (\r\n              <DefaultUser style={{ marginBottom: \"2rem\" }} />\r\n            )}\r\n\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody style={{ fontFamily: \"Poppins\" }}>\r\n                <tr\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <td style={{ marginLeft: \"8rem\" }}>\r\n                    <strong>Name</strong>\r\n                  </td>\r\n                  <td style={{ marginLeft: \"8rem\" }}>\r\n                    <>{userData[\"name\"] ? String(userData[\"name\"]) : \"\"}</>\r\n                  </td>\r\n                </tr>\r\n                <tr\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <td style={{ marginLeft: \"8rem\" }}>\r\n                    <strong>Email</strong>\r\n                  </td>\r\n                  <td style={{ marginLeft: \"9.8rem\" }}>\r\n                    <>{userData[\"email\"] ? String(userData[\"email\"]) : \"\"}</>\r\n                  </td>\r\n                </tr>\r\n                <tr\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <td style={{ marginLeft: \"8rem\" }}>\r\n                    <strong>Phone Number</strong>\r\n                  </td>\r\n                  <td style={{ marginLeft: \"5.6rem\" }}>\r\n                    <>\r\n                      {userData[\"phone_no\"] ? String(userData[\"phone_no\"]) : \"\"}\r\n                    </>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  ) : null;\r\n}\r\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/User.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/changePassword/changePassword.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/editUser.js",["265","266","267","268","269","270"],"import React, { useState, useEffect } from \"react\";\nimport FormData from \"form-data\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CImg,\n  CInputFile,\n} from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport {\n  EditUserDetails,\n  addUserList,\n  ViewUserDetails,\n  uploadImage,\n} from \"../../api\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { UserValidation } from \"../../reusable/validations/loginValidations\";\nimport DefaultUser from \"../../assets/svgs/defaultUser\";\n\nexport default function EditUser(props) {\n  const history = useHistory();\n  const params = useParams();\n  const [loading, setLoading] = useState(false);\n\n  const [userDetails, setUserDetails] = useState({});\n  const [imageUrl, setImageUrl] = useState(null);\n\n  const initialValues = {\n    name: userDetails.name ? userDetails.name : \"\",\n    email: userDetails.email ? userDetails.email : \"\",\n    country_code: userDetails.country_code ? userDetails.country_code : \"\",\n    phone_no: userDetails.phone_no ? userDetails.phone_no : \"\",\n    profile_picture_url: userDetails.profile_picture_url\n      ? userDetails.profile_picture_url\n      : \"\",\n  };\n\n  useEffect(() => {\n    getUserDetails();\n  }, []);\n\n  const getUserDetails = async () => {\n    try {\n      const res = await ViewUserDetails(params.id);\n      if (res.status == 200) {\n        setUserDetails(res);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleProfileChange = async (e) => {\n    var image = e.currentTarget.files[0];\n    var data = new FormData();\n    data.append(\"image\", image, image.name);\n    data.append(\"folderName\", \"user\");\n\n    try {\n      const res = await uploadImage(data);\n      if (res.status == 200) {\n        debugger;\n        setImageUrl(res.image_url);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onSubmit = async (values) => {\n    try {\n      if (userDetails.name) {\n        let formData = {};\n        if (values.name != userDetails.name) formData.name = values.name;\n        if (values.email != userDetails.email) formData.email = values.email;\n        if (values.phone_no != userDetails.phone_no)\n          formData.phone_no = values.phone_no;\n        if (imageUrl) formData.profile_picture_url = imageUrl;\n        setLoading(true);\n        const response = await EditUserDetails(formData, Number(params.id));\n        setLoading(false);\n        if (response) {\n          history.push(\"/users\");\n        }\n      } else {\n        setLoading(true);\n        const response = await addUserList(values);\n        setLoading(false);\n        if (response) {\n          history.push(\"/users\");\n        }\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues,\n    onSubmit,\n    validationSchema: UserValidation,\n  });\n\n  return (\n    <CContainer\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <CCol xs=\"12\" md=\"6\">\n        {params.id ? (\n          <CCard>\n            <CCardHeader style={{ fontFamily: \"Lato\" }}>\n              <h3>\n                <strong>Edit User Details</strong>\n              </h3>\n            </CCardHeader>\n            <CCardBody style={{ fontFamily: \"Roboto\" }}>\n              <CForm onSubmit={formik.handleSubmit} className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol xs=\"12\" style={{ textAlign: \"center\" }}>\n                    {userDetails.profile_picture_url ? (\n                      <>\n                        <CImg\n                          src={userDetails.profile_picture_url}\n                          className=\"c-avatar-img\"\n                          alt=\"admin@bootstrapmaster.com\"\n                          style={{\n                            marginBottom: \"2rem\",\n                            width: \"6rem\",\n                            height: \"6rem\",\n                          }}\n                        />\n                        <br />\n                        <span\n                          style={{\n                            fontSize: \"18px\",\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          Profile Picture\n                        </span>\n                      </>\n                    ) : (\n                      <DefaultUser style={{ marginBottom: \"2rem\" }} />\n                    )}\n                    <div style={{ textAlign: \"center\" }}>\n                      <label for=\"upload\">\n                        <div\n                          class=\"w-full px-2 py-1 my-2 flex justify-around items-center bg-gray-400 rounded-lg text-white\"\n                          title=\"Upload a photo...\"\n                        >\n                          <svg\n                            style={{ width: \"20px\" }}\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path\n                              stroke-linecap=\"round\"\n                              stroke-linejoin=\"round\"\n                              stroke-width=\"2\"\n                              d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                            ></path>\n                          </svg>{\" \"}\n                          Upload\n                          <CInput\n                            type=\"file\"\n                            name=\"upload\"\n                            id=\"upload\"\n                            onChange={handleProfileChange}\n                            style={{ display: \"none\" }}\n                            accept=\"image/png,image/jpeg\"\n                          />\n                        </div>\n                      </label>\n                    </div>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter User Name</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.name}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.name && formik.errors.name ? (\n                      <div className=\"email-validate\">{formik.errors.name}</div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter Email</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"email\"\n                      name=\"email\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.email && formik.errors.email ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.email}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter Mobile Number</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"phone_no\"\n                      name=\"phone_no\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.phone_no}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.phone_no && formik.errors.phone_no ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.phone_no}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CCardFooter\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {loading ? (\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                      <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  ) : (\n                    <CButton\n                      type=\"submit\"\n                      style={{ width: \"5rem\" }}\n                      color=\"success\"\n                    >\n                      {params.id ? (\n                        <strong>Update</strong>\n                      ) : (\n                        <strong>Add</strong>\n                      )}\n                    </CButton>\n                  )}\n\n                  <CButton\n                    style={{ width: \"5rem\" }}\n                    color=\"danger\"\n                    onClick={() => history.goBack()}\n                  >\n                    <strong>Cancel</strong>\n                  </CButton>\n                </CCardFooter>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        ) : (\n          <CCard>\n            <CCardHeader style={{ fontFamily: \"Lato\" }}>\n              <h3>\n                <strong>Add User Details</strong>\n              </h3>\n            </CCardHeader>\n            <CCardBody style={{ fontFamily: \"Roboto\" }}>\n              <CForm onSubmit={formik.handleSubmit} className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol xs=\"12\" md=\"9\">\n                    <DefaultUser style={{ marginBottom: \"2rem\" }} />\n                    <CInputFile\n                      id=\"profile_picture_url\"\n                      name=\"profile_picture_url\"\n                      type=\"file\"\n                      accept=\"image/x-png,image/gif,image/jpeg\"\n                      onChange={formik.handleChange}\n                    />\n                    {formik.errors.profile_picture_url ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.profile_picture_url}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter User Name</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.name}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.categoryType &&\n                    formik.errors.categoryType ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.categoryType}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter Email</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"email\"\n                      name=\"email\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.email && formik.errors.email ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.email}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>Enter Mobile Number</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput\n                      type=\"text\"\n                      id=\"country_code\"\n                      name=\"country_code\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.country_code}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.country_code &&\n                    formik.errors.country_code ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.country_code}\n                      </div>\n                    ) : null}\n                    <CInput\n                      type=\"text\"\n                      id=\"phone_no\"\n                      name=\"phone_no\"\n                      onBlur={formik.handleBlur}\n                      value={formik.values.phone_no}\n                      onChange={formik.handleChange}\n                    />\n                    {formik.touched.phone_no && formik.errors.phone_no ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.phone_no}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup>\n                {/* <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-categorytype\">\n                      <h6>User in Free Trail?</h6>\n                    </CLabel>\n                  </CCol>\n                  <CCol row md=\"3\">\n                    <CInput\n                      type=\"radio\"\n                      id=\"trail\"\n                      name=\"yesno\"\n                      style={{\n                        width: \"15%\",\n                        marginTop: \"-7px\",\n                        outline: \"none !important\",\n                      }}\n                      onBlur={formik.handleBlur}\n                      value={formik.values.trail}\n                      onChange={formik.handleChange}\n                    />\n                    <label for=\"trail1\">Yes</label>\n                  </CCol>\n                  <CCol row md=\"3\">\n                    <CInput\n                      type=\"radio\"\n                      id=\"trail\"\n                      name=\"yesno\"\n                      style={{ width: \"15%\", marginTop: \"-7px\" }}\n                      onBlur={formik.handleBlur}\n                      value={formik.values.trail}\n                      onChange={formik.handleChange}\n                    />\n                    <label for=\"trail2\">No</label>\n                    {formik.touched.categoryType &&\n                    formik.errors.categoryType ? (\n                      <div className=\"email-validate\">\n                        {formik.errors.categoryType}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CFormGroup> */}\n                <CCardFooter\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {loading ? (\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                      <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  ) : (\n                    <CButton\n                      type=\"submit\"\n                      style={{ width: \"5rem\" }}\n                      color=\"success\"\n                    >\n                      {userDetails.name ? (\n                        <strong>Update</strong>\n                      ) : (\n                        <strong>Add</strong>\n                      )}\n                    </CButton>\n                  )}\n\n                  <CButton\n                    style={{ width: \"5rem\" }}\n                    color=\"danger\"\n                    onClick={() => history.goBack()}\n                  >\n                    <strong>Cancel</strong>\n                  </CButton>\n                </CCardFooter>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        )}\n      </CCol>\n    </CContainer>\n  );\n}\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/adminProfile/editAdmin.js",["271","272","273"],"import React, { useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CInputFile,\r\n  CTextarea,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CImg,\r\n} from \"@coreui/react\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { UpdateProfile, uploadImage } from \"../../api\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { updateEmail } from \"../../reusable/validations/loginValidations\";\r\nimport DefaultUser from \"../../assets/svgs/defaultUser\";\r\n\r\nexport default function EditAdmin() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  if (!location.state) {\r\n    history.push(\"/profile\");\r\n  }\r\n\r\n  const userId = useSelector((state) => state.auth.userId);\r\n  const update = useSelector((state) => state.sidebar.updatePic);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [phoneModal, setPhoneModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showError, setShowError] = useState(\"\");\r\n  const [image, setImage] = useState({});\r\n\r\n  console.log(\"location\", location.state);\r\n\r\n  const formdata = new FormData();\r\n\r\n  const initialValues = {\r\n    name: location.state ? location.state.data.name : \"\",\r\n    email: location.state ? location.state.data.email : \"\",\r\n    profile_picture_url: location.state\r\n      ? location.state.data.profile_picture_url\r\n      : \"\",\r\n    newemail: location.state ? location.state.data.email : \"\",\r\n    phone:\r\n      location.state && location.state.data.phone_no\r\n        ? location.state.data.phone_no\r\n        : \"\",\r\n    newPhone:\r\n      location.state && location.state.data.phoneNumber\r\n        ? location.state.data.phoneNumber\r\n        : \"\",\r\n  };\r\n\r\n  const handleProfileChange = async (image) => {\r\n    setImage(image);\r\n    // formdata.append(\"image\", image, image.name);\r\n    // formdata.append(\"folderName\", \"user\");\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    const bodyFormData = new FormData();\r\n    formdata.append(\"image\", image, image.name);\r\n    formdata.append(\"folderName\", \"user\");\r\n    try {\r\n      const res = await uploadImage(formdata);\r\n      if (res.status == 200) {\r\n        bodyFormData.append(\"profile_picture_url\", res.data.image_url);\r\n      }\r\n      bodyFormData.append(\"name\", values.name);\r\n      bodyFormData.append(\r\n        \"email\",\r\n        values.newemail ? values.newemail : values.email\r\n      );\r\n      bodyFormData.append(\r\n        \"phone\",\r\n        values.newPhone ? values.newPhone : values.phone\r\n      );\r\n\r\n      try {\r\n        setLoading(true);\r\n        const response = await UpdateProfile(bodyFormData);\r\n\r\n        update();\r\n\r\n        setLoading(false);\r\n\r\n        history.push({\r\n          pathname: `/profile`,\r\n          state: { data: response.message, type: \"edit\" },\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema: updateEmail,\r\n  });\r\n\r\n  const handleUpadteEmail = async (type) => {\r\n    setEmailModal(!emailModal);\r\n  };\r\n\r\n  return (\r\n    <CContainer\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CCol lg=\"8\" md=\"6\">\r\n        <CModal\r\n          show={emailModal}\r\n          centered={true}\r\n          backdrop={false}\r\n          color=\"warning\"\r\n          onClose={setEmailModal}\r\n          style={{ fontFamily: \"Poppins\" }}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>Enter New Email Address</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hf-categorytype\">\r\n                  <h6>New Email:</h6>\r\n                </CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"newemail\"\r\n                  name=\"newemail\"\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.newemail}\r\n                  onChange={formik.handleChange}\r\n                />\r\n                {formik.touched.newemail && formik.errors.newemail ? (\r\n                  <div className=\"email-validate\">{formik.errors.newemail}</div>\r\n                ) : null}\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"success\" onClick={() => handleUpadteEmail(\"email\")}>\r\n              Yes\r\n            </CButton>\r\n            <CButton color=\"secondary\" onClick={() => setEmailModal(false)}>\r\n              Cancel\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <CModal\r\n          show={phoneModal}\r\n          centered={true}\r\n          backdrop={false}\r\n          color=\"warning\"\r\n          onClose={setPhoneModal}\r\n          style={{ fontFamily: \"Poppins\" }}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>Enter New Phone Number</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hf-categorytype\">\r\n                  <h6>New Phone:</h6>\r\n                </CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput\r\n                  type=\"text\"\r\n                  id=\"newPhone\"\r\n                  name=\"newPhone\"\r\n                  onBlur={formik.handleBlur}\r\n                  value={formik.values.newPhone}\r\n                  onChange={formik.handleChange}\r\n                />\r\n                {formik.touched.newPhone && formik.errors.newPhone ? (\r\n                  <div className=\"email-validate\">{formik.errors.newPhone}</div>\r\n                ) : null}\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"success\" onClick={() => handleUpadteEmail(\"phone\")}>\r\n              Yes\r\n            </CButton>\r\n            <CButton color=\"secondary\" onClick={() => setPhoneModal(false)}>\r\n              Cancel\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <CCard>\r\n          <CCardHeader style={{ fontFamily: \"Lato\" }}>\r\n            <h3>\r\n              <strong>Edit Admin</strong>\r\n            </h3>\r\n          </CCardHeader>\r\n          <CCardBody style={{ fontFamily: \"Poppins\" }}>\r\n            <CForm onSubmit={formik.handleSubmit} className=\"form-horizontal\">\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"custom-file-input\">\r\n                    Update Profile Pic\r\n                  </CLabel>\r\n                </CCol>\r\n                <CCol xs=\"8\" md=\"6\">\r\n                  {initialValues.profile_picture_url ? (\r\n                    <>\r\n                      <CImg\r\n                        src={initialValues.profile_picture_url}\r\n                        className=\"c-avatar-img\"\r\n                        alt=\"\"\r\n                        style={{\r\n                          marginBottom: \"2rem\",\r\n                          width: \"6rem\",\r\n                          height: \"6rem\",\r\n                          paddingBottom: \"10px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <DefaultUser style={{ marginBottom: \"2rem\" }} />\r\n                  )}\r\n                  <CInputFile\r\n                    name=\"profile_picture_url\"\r\n                    type=\"file\"\r\n                    className=\"hidden\"\r\n                    onChange={(e) => {\r\n                      formik.setFieldValue(\"profile_picture_url\", \"\");\r\n\r\n                      if (\r\n                        e.target.files[0].type !== \"image/png\" &&\r\n                        e.target.files[0].type !== \"image/jpeg\"\r\n                      ) {\r\n                        setShowError(\"Only jpeg, png images are allowed\");\r\n                        return;\r\n                      }\r\n                      setShowError(\"\");\r\n                      handleProfileChange(e.target.files[0]);\r\n                    }}\r\n                  />\r\n                  {showError ? (\r\n                    <div className=\"email-validate\">{showError}</div>\r\n                  ) : null}\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"hf-category\">Admin Name</CLabel>\r\n                </CCol>\r\n                <CCol>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.touched.name && formik.errors.name ? (\r\n                    <div className=\"email-validate\">{formik.errors.name}</div>\r\n                  ) : null}\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"hf-categorytype\">Email Address</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    disabled=\"true\"\r\n                    name=\"email\"\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <CButton\r\n                    onClick={() => setEmailModal(!emailModal)}\r\n                    style={{ color: \"white\", marginTop: \"1rem\", width: \"8rem\" }}\r\n                    color=\"warning\"\r\n                  >\r\n                    Update Email\r\n                  </CButton>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"hf-categorytype\">Phone Number</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput\r\n                    id=\"phone\"\r\n                    disabled=\"true\"\r\n                    name=\"phone\"\r\n                    onBlur={formik.handleBlur}\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <CButton\r\n                    onClick={() => setPhoneModal(!phoneModal)}\r\n                    style={{ color: \"white\", marginTop: \"1rem\", width: \"8rem\" }}\r\n                    color=\"warning\"\r\n                  >\r\n                    Update Phone\r\n                  </CButton>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CCardFooter\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-around\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CButton\r\n                  onClick={() => history.push(\"/profile\")}\r\n                  style={{ width: \"5rem\" }}\r\n                  type=\"reset\"\r\n                  color=\"danger\"\r\n                >\r\n                  <strong>Cancel</strong>\r\n                </CButton>\r\n                {loading ? (\r\n                  <div className=\"spinner-border text-success\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                ) : (\r\n                  <CButton\r\n                    type=\"submit\"\r\n                    color=\"success\"\r\n                    style={{ width: \"5rem\" }}\r\n                  >\r\n                    <strong>Update</strong>\r\n                  </CButton>\r\n                )}\r\n              </CCardFooter>\r\n              <CCardFooter>\r\n                <CCol style={{ textAlign: \"center\", margin: \"10px\" }}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    onClick={() => history.push(\"/changePassword\")}\r\n                  >\r\n                    <strong>Change Password</strong>\r\n                  </CButton>\r\n                </CCol>\r\n              </CCardFooter>\r\n            </CForm>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CContainer>\r\n  );\r\n}\r\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/users/newUsers.js",["274"],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/recipeManagement/recipes.js",["275","276","277","278","279"],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/pages/page404/Page404.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/recipeManagement/addRecipe.js",["280","281","282","283"],"import React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CTextarea,\n  CInputFile,\n  CSelect,\n} from \"@coreui/react\";\n\nimport { uploadImage, SavePost, EditPost, GetRecipeDetail } from \"../../api\";\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\nimport FormData from \"form-data\";\n\nexport default function AddRecipe() {\n  const location = useLocation();\n  const history = useHistory();\n  const params = useParams();\n\n  var phase = [\n    {\n      label: \"kisckstart\",\n      value: 1,\n    },\n    {\n      label: \"phase 1\",\n      value: 2,\n    },\n\n    {\n      label: \"phase 2\",\n      value: 3,\n    },\n    {\n      label: \"phase 3\",\n      value: 4,\n    },\n    {\n      label: \"phase 4\",\n      value: 5,\n    },\n    {\n      label: \"phase 4 eva\",\n      value: 6,\n    },\n  ];\n\n  const [recipeType, setRecipeType] = useState(null);\n  const [disable, setDisable] = useState(false);\n\n  const [show, setShow] = useState({\n    phase_id: \"\",\n    recipe_image_url: \"\",\n    recipe_title: \"\",\n    recipe_ingredients: \"\",\n    recipe_methods: \"\",\n  });\n\n  const [error, setError] = useState({\n    phase_id: {\n      error: \"\",\n      blur: \"\",\n    },\n    recipe_image_url: {\n      error: \"\",\n      blur: \"\",\n    },\n    recipe_title: {\n      error: \"\",\n      blur: \"\",\n    },\n    recipe_ingredients: {\n      error: \"\",\n      blur: \"\",\n    },\n    recipe_methods: {\n      error: \"\",\n      blur: \"\",\n    },\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const GetRecipe = async () => {\n      try {\n        const result = await GetRecipeDetail(params.id);\n        if (result) {\n          setShow(result.recipeDetails);\n          debugger;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    GetRecipe();\n  }, [params.id]);\n\n  const validateForm = () => {\n    let valid = true;\n    let showPhase = \"\";\n    let showTitle = \"\";\n    let showIng = \"\";\n    let showMethod = \"\";\n    if (show.phase_id === \"none\" || show.phase_id === \"\") {\n      valid = false;\n      showPhase = \"Please select Phase\";\n    }\n    if (show.recipe_ingredients === \"\") {\n      valid = false;\n      showIng = \"Please enter Recipe Ingredients\";\n    }\n    if (show.recipe_methods === \"\") {\n      valid = false;\n      showMethod = \"Please enter Recipe Methods\";\n    }\n    if (show.recipe_title === \"\") {\n      valid = false;\n      showTitle = \"Please enter Recipe Title\";\n    }\n    setError({\n      ...error,\n      recipe_title: { ...error.recipe_title, error: showTitle },\n      recipe_ingredients: {\n        ...error.recipe_ingredients,\n        error: showIng,\n      },\n      recipe_methods: {\n        ...error.recipe_methods,\n        error: showMethod,\n      },\n      phase_id: { ...error.phase_id, error: showPhase },\n    });\n\n    return valid;\n  };\n\n  const showFile = async (event) => {\n    event.preventDefault();\n\n    if (event.target.files.length < 1) {\n      return;\n    }\n    setError({\n      ...error,\n      recipe_image_url: { ...error.recipe_image_url, error: \"\" },\n    });\n\n    if (\n      event.target.files[0].type !== \"image/png\" &&\n      event.target.files[0].type !== \"image/jpeg\"\n    ) {\n      setError({\n        ...error,\n        recipe_image_url: {\n          ...error.recipe_image_url,\n          error: \"Only jpeg, png images are allowed\",\n        },\n      });\n      return;\n    }\n\n    var image = event.target.files[0];\n    var data = new FormData();\n    data.append(\"image\", image, image.name);\n    data.append(\"folderName\", \"recipe\");\n\n    try {\n      setDisable(true);\n      const result = await uploadImage(data);\n      if (result) {\n        setDisable(false);\n        setShow({ ...show, recipe_image_url: result.data.recipe_image_url });\n      }\n    } catch (error) {\n      console.log(error);\n      setError({\n        ...error,\n        recipe_image_url: { ...error.recipe_image_url, error: error },\n      });\n    }\n  };\n\n  const handleTitleChange = (e) => {\n    setError({ ...error, recipe_title: { ...error.recipe_title, error: \"\" } });\n\n    if (e.target.value === \"\") {\n      setError({\n        ...error,\n        recipe_title: {\n          ...error.recipe_title,\n          error: \"Please enter Recipe Title\",\n        },\n      });\n    }\n    setShow({ ...show, recipe_title: e.target.value });\n  };\n\n  const handleDescriptionChange = (e) => {\n    setError({\n      ...error,\n      recipe_ingredients: { ...error.recipe_ingredients, error: \"\" },\n    });\n\n    if (e.target.value === \"\") {\n      setError({\n        ...error,\n        recipe_ingredients: {\n          ...error.recipe_ingredients,\n          error: \"Please enter Recipe Ingredients\",\n        },\n      });\n    }\n    setShow({ ...show, recipe_ingredients: e.target.value });\n  };\n\n  const handleMethodsChange = (e) => {\n    setError({\n      ...error,\n      recipe_methods: { ...error.recipe_methods, error: \"\" },\n    });\n\n    if (e.target.value === \"\") {\n      setError({\n        ...error,\n        recipe_methods: {\n          ...error.recipe_methods,\n          error: \"Please enter a Description\",\n        },\n      });\n    }\n    setShow({ ...show, recipe_methods: e.target.value });\n  };\n  const handleCategoryIdChange = (e) => {\n    setError({\n      ...error,\n      phase_id: { ...error.phase_id, error: \"\" },\n    });\n\n    if (e.target.value === \"none\") {\n      setError({\n        ...error,\n        phase_id: {\n          ...error.phase_id,\n          error: \"Please enter a Phase\",\n        },\n      });\n    }\n    setShow({ ...show, phase_id: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    if (params.id) {\n      const body = {\n        phase_id: Number(show.phase_id),\n        recipe_image_url: show.recipe_image_url,\n        recipe_title: show.recipe_title,\n        recipe_ingredients: show.recipe_ingredients,\n        recipe_methods: show.recipe_methods,\n        recipe_type: recipeType ? recipeType : show.recipe_type,\n      };\n      try {\n        setLoading(true);\n        const response = await EditPost(params.id, body);\n        setLoading(false);\n        if (response) {\n          history.push(\"/recipeManagement\");\n        }\n      } catch (error) {\n        setLoading(false);\n        console.log(error);\n      }\n    } else {\n      const body = {\n        phase_id: Number(show.phase_id),\n        recipe_image_url: show.recipe_image_url,\n        recipe_title: show.recipe_title,\n        recipe_ingredients: show.recipe_ingredients,\n        recipe_methods: show.recipe_methods,\n        recipe_type: recipeType,\n      };\n      try {\n        setLoading(true);\n        const response = await SavePost(body);\n        setLoading(false);\n        if (response) {\n          history.push(\"/recipeManagement\");\n        }\n      } catch (error) {\n        setLoading(false);\n        console.log(error);\n      }\n    }\n  };\n\n  const handleRecipeType = (type) => {\n    setRecipeType(type);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <CContainer\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {\n          <CCol xl=\"10\" md=\"10\">\n            <CCard>\n              <CCardHeader style={{ fontFamily: \"Lato\" }}>\n                <h3>\n                  {location.state ? (\n                    <strong>Edit Recipe</strong>\n                  ) : (\n                    <strong>Add Recipe</strong>\n                  )}\n                </h3>\n              </CCardHeader>\n\n              <CCardBody\n                style={{\n                  fontFamily: \"Roboto\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <div className=\"form-horizontal\">\n                  <div style={{ margin: \"auto\" }}>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel>\n                          <h6>\n                            <strong>Enter Recipe Title:</strong>\n                          </h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                          type=\"text\"\n                          id=\"recipe_title\"\n                          name=\"recipe_title\"\n                          value={show.recipe_title}\n                          onChange={(e) => handleTitleChange(e)}\n                          onBlur={handleTitleChange}\n                        />\n                        {error.recipe_title.error && (\n                          <div className=\"email-validate\">\n                            {error.recipe_title.error}\n                          </div>\n                        )}\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"hf-recipe_image_url\">\n                          <h6>\n                            <strong>Upload Recipe Image:</strong>\n                          </h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInputFile\n                          id=\"recipe_image_url\"\n                          name=\"recipe_image_url\"\n                          type=\"file\"\n                          onChange={(e) => {\n                            const id = `recipe_image_url`;\n                            showFile(e);\n                          }}\n                        />\n                        <div>Please upload 100*100 resolution image</div>\n                        {error.recipe_image_url.error && (\n                          <div className=\"email-validate\">\n                            {error.recipe_image_url.error}\n                          </div>\n                        )}\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel\n                          style={{ fontFamily: \"Poppins\" }}\n                          htmlFor=\"textarea-input\"\n                        >\n                          <h6>\n                            <strong>Enter Recipe Ingredients:</strong>\n                          </h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol xs=\"4\" md=\"9\">\n                        <CTextarea\n                          type=\"text\"\n                          id=\"recipe_ingredients\"\n                          name=\"recipe_ingredients\"\n                          onBlur={handleDescriptionChange}\n                          value={show.recipe_ingredients}\n                          onChange={handleDescriptionChange}\n                          rows=\"6\"\n                        />\n                        {error.recipe_ingredients.error && (\n                          <div className=\"email-validate\">\n                            {error.recipe_ingredients.error}\n                          </div>\n                        )}\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel\n                          style={{ fontFamily: \"Poppins\" }}\n                          htmlFor=\"textarea-input\"\n                        >\n                          <h6>\n                            <strong>Enter Recipe Methods:</strong>\n                          </h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol xs=\"4\" md=\"9\">\n                        <CTextarea\n                          type=\"text\"\n                          id=\"recipe_methods\"\n                          name=\"recipe_methods\"\n                          onBlur={handleMethodsChange}\n                          value={show.recipe_methods}\n                          onChange={handleMethodsChange}\n                          rows=\"6\"\n                        />\n                        {error.recipe_methods.error && (\n                          <div className=\"email-validate\">\n                            {error.recipe_methods.error}\n                          </div>\n                        )}\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"recipe_type\">\n                          <h6>Recipe type?</h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol row md=\"3\">\n                        <label for={1}>\n                          <CInput\n                            type=\"radio\"\n                            id={1}\n                            formControlName=\"recipe_type\"\n                            checked={show.recipe_type == 1 ? \"checked\" : \"\"}\n                            style={{\n                              width: \"60%\",\n                              marginTop: \"-7px\",\n                              outline: \"none !important\",\n                            }}\n                            onChange={() => {\n                              handleRecipeType(1);\n                            }}\n                          />\n                          Veg\n                        </label>\n                      </CCol>\n                      <CCol row md=\"3\">\n                        <label for={2}>\n                          <CInput\n                            type=\"radio\"\n                            id={2}\n                            formControlName=\"recipe_type\"\n                            checked={show.recipe_type == 2 ? \"checked\" : \"\"}\n                            value={show.recipe_type}\n                            style={{ width: \"28%\", marginTop: \"-7px\" }}\n                            onChange={() => {\n                              handleRecipeType(2);\n                            }}\n                          />\n                          Non Veg\n                        </label>\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"hf-category\">\n                          <h6>\n                            <strong>Phase</strong>\n                          </h6>\n                        </CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CSelect\n                          value={show.phase_id}\n                          onChange={handleCategoryIdChange}\n                          onBlur={handleCategoryIdChange}\n                          custom\n                          name=\"phase_id\"\n                          id=\"phase_id\"\n                          options={phase}\n                        >\n                          <option value=\"none\">Select Phase</option>\n                          {phase.map((item, index) => (\n                            <option key={index} value={item.value}>\n                              {item.label}\n                            </option>\n                          ))}\n                        </CSelect>\n                        {error.phase_id.error && (\n                          <div className=\"email-validate\">\n                            {error.phase_id.error}\n                          </div>\n                        )}\n                        {/* {formik.touched.categoryTypeId && formik.errors.categoryTypeId ? <div className=\"email-validate\">{formik.errors.categoryTypeId}</div> : null} */}\n                      </CCol>\n                    </CFormGroup>\n                  </div>\n                  <div style={{ textAlign: \"-webkit-center\" }}>\n                    {loading ? (\n                      <div\n                        className=\"spinner-border text-success\"\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    ) : (\n                      <CButton\n                        // disabled={disable}\n                        type=\"submit\"\n                        name=\"submit\"\n                        color=\"success\"\n                        style={{ width: \"75px\" }}\n                      >\n                        Save\n                      </CButton>\n                    )}\n                    <CButton\n                      style={{ width: \"5rem\", marginLeft: \"2rem\" }}\n                      color=\"danger\"\n                      onClick={() => history.goBack()}\n                    >\n                      <strong>Cancel</strong>\n                    </CButton>\n                  </div>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        }\n      </CContainer>\n    </form>\n  );\n}\n","/home/sonal/Documents/projects/changing-habits-adminpanel/src/views/theme/colors/Colors.js",[],"/home/sonal/Documents/projects/changing-habits-adminpanel/src/globalComponent/loader.js",["284","285"],"import React,{useState} from 'react';\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\n  display: block;\n  margin: 10px auto;\n  border-color: blue;\n`;\n\n\nconst Loader = () =>{\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ffffff\");\n  \n    return (\n      <div className=\"sweet-loading\" style={{height: '800px'}}>\n      <ClipLoader color={color} loading={loading} css={override} size={150} />\n      </div>\n    );\n}\n\nexport default Loader;",{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":21,"column":7,"nodeType":"292","messageId":"293","endLine":21,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":361,"column":27,"nodeType":"296","messageId":"297","endLine":361,"endColumn":29},{"ruleId":"294","severity":1,"message":"295","line":565,"column":27,"nodeType":"296","messageId":"297","endLine":565,"endColumn":29},{"ruleId":"290","severity":1,"message":"298","line":3,"column":29,"nodeType":"292","messageId":"293","endLine":3,"endColumn":41},{"ruleId":"290","severity":1,"message":"299","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"300","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":17},{"ruleId":"290","severity":1,"message":"301","line":7,"column":19,"nodeType":"292","messageId":"293","endLine":7,"endColumn":29},{"ruleId":"290","severity":1,"message":"302","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":9},{"ruleId":"290","severity":1,"message":"303","line":28,"column":9,"nodeType":"292","messageId":"293","endLine":28,"endColumn":16},{"ruleId":"290","severity":1,"message":"304","line":39,"column":10,"nodeType":"292","messageId":"293","endLine":39,"endColumn":14},{"ruleId":"290","severity":1,"message":"305","line":41,"column":20,"nodeType":"292","messageId":"293","endLine":41,"endColumn":31},{"ruleId":"306","severity":1,"message":"307","line":74,"column":6,"nodeType":"308","endLine":74,"endColumn":27,"suggestions":"309"},{"ruleId":"294","severity":1,"message":"295","line":78,"column":21,"nodeType":"296","messageId":"297","endLine":78,"endColumn":23},{"ruleId":"294","severity":1,"message":"295","line":95,"column":31,"nodeType":"296","messageId":"297","endLine":95,"endColumn":33},{"ruleId":"290","severity":1,"message":"310","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"306","severity":1,"message":"311","line":19,"column":6,"nodeType":"308","endLine":19,"endColumn":8,"suggestions":"312"},{"ruleId":"290","severity":1,"message":"313","line":22,"column":11,"nodeType":"292","messageId":"293","endLine":22,"endColumn":14},{"ruleId":"290","severity":1,"message":"313","line":50,"column":13,"nodeType":"292","messageId":"293","endLine":50,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":52,"column":26,"nodeType":"296","messageId":"297","endLine":52,"endColumn":28},{"ruleId":"294","severity":1,"message":"314","line":101,"column":34,"nodeType":"296","messageId":"297","endLine":101,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":130,"column":39,"nodeType":"296","messageId":"297","endLine":130,"endColumn":41},{"ruleId":"290","severity":1,"message":"315","line":14,"column":15,"nodeType":"292","messageId":"293","endLine":14,"endColumn":19},{"ruleId":"290","severity":1,"message":"316","line":16,"column":17,"nodeType":"292","messageId":"293","endLine":16,"endColumn":24},{"ruleId":"290","severity":1,"message":"315","line":26,"column":15,"nodeType":"292","messageId":"293","endLine":26,"endColumn":19},{"ruleId":"290","severity":1,"message":"316","line":27,"column":17,"nodeType":"292","messageId":"293","endLine":27,"endColumn":24},{"ruleId":"306","severity":1,"message":"317","line":41,"column":6,"nodeType":"308","endLine":41,"endColumn":8,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"295","line":51,"column":22,"nodeType":"296","messageId":"297","endLine":51,"endColumn":24},{"ruleId":"290","severity":1,"message":"316","line":63,"column":13,"nodeType":"292","messageId":"293","endLine":63,"endColumn":20},{"ruleId":"294","severity":1,"message":"295","line":79,"column":22,"nodeType":"296","messageId":"297","endLine":79,"endColumn":24},{"ruleId":"319","severity":1,"message":"320","line":163,"column":23,"nodeType":"321","messageId":"297","endLine":163,"endColumn":33},{"ruleId":"290","severity":1,"message":"322","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"323","line":8,"column":9,"nodeType":"292","messageId":"293","endLine":8,"endColumn":14},{"ruleId":"290","severity":1,"message":"313","line":34,"column":13,"nodeType":"292","messageId":"293","endLine":34,"endColumn":16},{"ruleId":"290","severity":1,"message":"324","line":21,"column":9,"nodeType":"292","messageId":"293","endLine":21,"endColumn":15},{"ruleId":"306","severity":1,"message":"325","line":49,"column":6,"nodeType":"308","endLine":49,"endColumn":8,"suggestions":"326"},{"ruleId":"294","severity":1,"message":"295","line":54,"column":22,"nodeType":"296","messageId":"297","endLine":54,"endColumn":24},{"ruleId":"294","severity":1,"message":"295","line":70,"column":22,"nodeType":"296","messageId":"297","endLine":70,"endColumn":24},{"ruleId":"294","severity":1,"message":"314","line":83,"column":25,"nodeType":"296","messageId":"297","endLine":83,"endColumn":27},{"ruleId":"294","severity":1,"message":"314","line":84,"column":26,"nodeType":"296","messageId":"297","endLine":84,"endColumn":28},{"ruleId":"294","severity":1,"message":"314","line":85,"column":29,"nodeType":"296","messageId":"297","endLine":85,"endColumn":31},{"ruleId":"290","severity":1,"message":"327","line":15,"column":3,"nodeType":"292","messageId":"293","endLine":15,"endColumn":12},{"ruleId":"290","severity":1,"message":"324","line":39,"column":9,"nodeType":"292","messageId":"293","endLine":39,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":80,"column":22,"nodeType":"296","messageId":"297","endLine":80,"endColumn":24},{"ruleId":"294","severity":1,"message":"295","line":314,"column":34,"nodeType":"296","messageId":"297","endLine":314,"endColumn":36},{"ruleId":"290","severity":1,"message":"328","line":95,"column":18,"nodeType":"292","messageId":"293","endLine":95,"endColumn":27},{"ruleId":"290","severity":1,"message":"329","line":133,"column":13,"nodeType":"292","messageId":"293","endLine":133,"endColumn":25},{"ruleId":"294","severity":1,"message":"295","line":331,"column":34,"nodeType":"296","messageId":"297","endLine":331,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":334,"column":41,"nodeType":"296","messageId":"297","endLine":334,"endColumn":43},{"ruleId":"294","severity":1,"message":"295","line":338,"column":34,"nodeType":"296","messageId":"297","endLine":338,"endColumn":36},{"ruleId":"290","severity":1,"message":"330","line":55,"column":10,"nodeType":"292","messageId":"293","endLine":55,"endColumn":17},{"ruleId":"290","severity":1,"message":"331","line":378,"column":35,"nodeType":"292","messageId":"293","endLine":378,"endColumn":37},{"ruleId":"294","severity":1,"message":"295","line":458,"column":55,"nodeType":"296","messageId":"297","endLine":458,"endColumn":57},{"ruleId":"294","severity":1,"message":"295","line":477,"column":55,"nodeType":"296","messageId":"297","endLine":477,"endColumn":57},{"ruleId":"290","severity":1,"message":"332","line":13,"column":19,"nodeType":"292","messageId":"293","endLine":13,"endColumn":29},{"ruleId":"290","severity":1,"message":"333","line":14,"column":17,"nodeType":"292","messageId":"293","endLine":14,"endColumn":25},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-unused-vars","'OtpVerify' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CHeaderBrand' is defined but never used.","'biglogo' is defined but never used.","'AddRecipe' is defined but never used.","'cibWindows' is defined but never used.","'_' is defined but never used.","'topicid' is assigned a value but never used.","'show' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleQuestions'. Either include it or remove the dependency array.","ArrayExpression",["336"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'faqById'. Either include it or remove the dependency array.",["337"],"'res' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","'Details' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["338"],"no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'useEffect' is defined but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["339"],"'CTextarea' is defined but never used.","'setActive' is assigned a value but never used.","'deleteResult' is assigned a value but never used.","'disable' is assigned a value but never used.","'id' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [refresh, activePage, handleQuestions]",{"range":"348","text":"349"},"Update the dependencies array to be: [faqById]",{"range":"350","text":"351"},"Update the dependencies array to be: [params.id]",{"range":"352","text":"353"},"Update the dependencies array to be: [getUserDetails]",{"range":"354","text":"355"},[2144,2165],"[refresh, activePage, handleQuestions]",[598,600],"[faqById]",[1238,1240],"[params.id]",[1290,1292],"[getUserDetails]"]